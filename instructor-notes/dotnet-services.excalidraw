{
  "type": "excalidraw",
  "version": 2,
  "source": "https://marketplace.visualstudio.com/items?itemName=pomdtr.excalidraw-editor",
  "elements": [
    {
      "id": "lYMEhlOkdNGum7vXlUrYQ",
      "type": "text",
      "x": 409,
      "y": 139,
      "width": 1175.239013671875,
      "height": 525,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "seed": 1170705439,
      "version": 892,
      "versionNonce": 1208264095,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1708531173169,
      "link": null,
      "locked": false,
      "text": "\"Services\" in a .NET API are code that, uh, provides some service for you.\n\nNormal, sane programmers call \"new\" on things when they need them.\n\n- We are also asking ASP.NET Core to manage the \"lifetime\" of those services.\n\n\n- AddTransient\n    - A new instane is created for each use.\n\n- AddScoped\n    - In an API the \"Scope\" is the individual HTTP Request.\n    - A new instance will be created for each incoming request that needs it, and will be reused across that request.\n    - At the end of the request it will be disposed (if it is IDisposable)\n\n- AddSingleton\n    - A single instance of this will be shared amongst all usages.\n    - takes a while to create. \n    - They must be thread safe.\n        - If the service is \"stateful\" - has data inside of the service (variables)\n          you have to either use locking (which will hurt performance) or use Thread-Safe collections, etc.",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 518,
      "containerId": null,
      "originalText": "\"Services\" in a .NET API are code that, uh, provides some service for you.\n\nNormal, sane programmers call \"new\" on things when they need them.\n\n- We are also asking ASP.NET Core to manage the \"lifetime\" of those services.\n\n\n- AddTransient\n    - A new instane is created for each use.\n\n- AddScoped\n    - In an API the \"Scope\" is the individual HTTP Request.\n    - A new instance will be created for each incoming request that needs it, and will be reused across that request.\n    - At the end of the request it will be disposed (if it is IDisposable)\n\n- AddSingleton\n    - A single instance of this will be shared amongst all usages.\n    - takes a while to create. \n    - They must be thread safe.\n        - If the service is \"stateful\" - has data inside of the service (variables)\n          you have to either use locking (which will hurt performance) or use Thread-Safe collections, etc.",
      "lineHeight": 1.25
    },
    {
      "id": "eZF-BXT0Jrppik2nld1HY",
      "type": "rectangle",
      "x": 312,
      "y": 735,
      "width": 278,
      "height": 105,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "seed": 1581393329,
      "version": 16,
      "versionNonce": 2034697681,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1708531189776,
      "link": null,
      "locked": false
    },
    {
      "id": "M7hsXvdimog8s71dS50wR",
      "type": "text",
      "x": 649,
      "y": 1023,
      "width": 847.179443359375,
      "height": 175,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "seed": 1651148177,
      "version": 251,
      "versionNonce": 2146104127,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1708531357015,
      "link": null,
      "locked": false,
      "text": "EntityFramework for data:\n    - DbContext - \"Scoped Service\"\n    - Connection class that gets injected into the DB context, and it is a singleton.\n\nHttpClient -\n    - One is scoped\n    - singleton that manages connection pools, dns caching etc.",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 168,
      "containerId": null,
      "originalText": "EntityFramework for data:\n    - DbContext - \"Scoped Service\"\n    - Connection class that gets injected into the DB context, and it is a singleton.\n\nHttpClient -\n    - One is scoped\n    - singleton that manages connection pools, dns caching etc.",
      "lineHeight": 1.25
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}